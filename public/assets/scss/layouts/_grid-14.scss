.row {
  max-width: $rowWidth;
    width: 100%;
  margin-right: auto;
  margin-left: auto;
  display: flex;
  flex-flow: row wrap;

    @media (max-width: $small) {
        max-width: 62.5rem;
    }
}
.row .row {
  margin-right: calc(var(--columnSpace)*-1);
  margin-left: calc(var(--columnSpace)*-1); }
.row.expanded {
  max-width: none; }
.row.expanded .row {
  margin-right: auto;
  margin-left: auto; }
.row:not(.expanded) .row {
  max-width: none;
}

.column, .columns {
  flex: 1 1 0;
  padding-right: var(--columnSpace);
  padding-left: var(--columnSpace);
}

.row .column.row.row, .row .row.row.columns {
  margin-right: 0;
  margin-left: 0;
  padding-right: 0;
  padding-left: 0;
}

@for $i from 1 through $columns {
  .small {

    &-#{$i} {
      flex: 0 0 calc(100/var(--columns)*#{$i*1%});
      max-width: calc(100/var(--columns)*#{$i*1%});
    }
    &-offset-#{$i} {
      margin-left: calc(100/var(--columns)*#{$i*1%});
    }
  }
}

@media print, screen and (min-width: $xSmall) {
  @for $i from 1 through $columns {
    .medium {

      &-#{$i} {
        flex: 0 0 calc(100/var(--columns)*#{$i*1%});
        max-width: calc(100/var(--columns)*#{$i*1%});
      }
      &-offset-#{$i} {
        margin-left: calc(100/var(--columns)*#{$i*1%});
      }
    }
  }
}

@media print, screen and (min-width: $tablet) {
  @for $i from 1 through $columns {
    .large {

      &-#{$i} {
        flex: 0 0 calc(100/var(--columns)*#{$i*1%});
        max-width: calc(100/var(--columns)*#{$i*1%});
      }
      &-offset-#{$i} {
        margin-left: calc(100/var(--columns)*#{$i*1%});
      }
    }
  }
}

@media print, screen and (min-width: $small) {
  @for $i from 1 through $columns {
    .x-large {

      &-#{$i} {
        flex: 0 0 calc(100/var(--columns)*#{$i*1%});
        max-width: calc(100/var(--columns)*#{$i*1%});
      }
      &-offset-#{$i} {
        margin-left: calc(100/var(--columns)*#{$i*1%});
      }
    }
  }
}

@media print, screen and (min-width: $xLarge) {
  @for $i from 1 through $columns {
    .xx-large {

      &-#{$i} {
        flex: 0 0 calc(100/var(--columns)*#{$i*1%});
        max-width: calc(100/var(--columns)*#{$i*1%});
      }
      &-offset-#{$i} {
        margin-left: calc(100/var(--columns)*#{$i*1%});
      }
    }
  }
}

.flex-container {
  display: flex;
    -webkit-box-orient: horizontal
}

.flex-row-wrap {
  flex-flow: row wrap;
}

.flex-child-auto {
  flex: 1 1 auto; }

.flex-child-grow {
  flex: 1 0 auto; }

.flex-child-shrink {
  flex: 0 1 auto; }

.flex-dir-row {
  flex-direction: row; }

.flex-dir-row-reverse {
  flex-direction: row-reverse; }

.flex-dir-column {
  flex-direction: column; }

.flex-dir-column-reverse {
  flex-direction: column-reverse; }

@media print, screen and (min-width: 40em) {
  .medium-flex-child-auto {
    flex: 1 1 auto; }
  .medium-flex-child-grow {
    flex: 1 0 auto; }
  .medium-flex-child-shrink {
    flex: 0 1 auto; }
  .medium-flex-dir-row {
    flex-direction: row; }
  .medium-flex-dir-row-reverse {
    flex-direction: row-reverse; }
  .medium-flex-dir-column {
    flex-direction: column; }
  .medium-flex-dir-column-reverse {
    flex-direction: column-reverse; } }

@media print, screen and (min-width: $small) {
  .large-flex-child-auto {
    flex: 1 1 auto; }
  .large-flex-child-grow {
    flex: 1 0 auto; }
  .large-flex-child-shrink {
    flex: 0 1 auto; }
  .large-flex-dir-row {
    flex-direction: row; }
  .large-flex-dir-row-reverse {
    flex-direction: row-reverse; }
  .large-flex-dir-column {
    flex-direction: column; }
  .large-flex-dir-column-reverse {
    flex-direction: column-reverse; } }
